@import 'base';

@mixin box {
  box-sizing: border-box;
}

@mixin font($font-size: 13px, $line-height: 1) {
  font-family: $font;
  font-size: $font-size;
  line-height: $line-height;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-row {
  display: flex;
  flex-direction: row;
}

@mixin flex-row-center {
  @include flex-row;

  align-items: center;
  justify-content: center;
}

@mixin flex-column-center {
  @include flex-column;

  align-items: center;
  justify-content: center;
}

@mixin hover-animation {
  transition: all 0.3s ease 0s;
}

@mixin header-container {
  max-width: 1020px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 10px;
  padding-right: 10px;
}

@mixin property-transition($property...) {
  transition-property: $property;
  transition-duration: 200ms;
  transition-timing-function: $default-animation;
  transition-delay: 0ms;
}

@mixin ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Service mixin
@mixin simple_transition($value) {
  transition: $value;
}
// Usage example: @include transition(height, opacity, transform);
// Result of use: transition: height 0.3s ease 0s , opacity 0.3s ease 0s , transform 0.3s ease 0s , -webkit-transform 0.3s ease 0s;
@mixin transition($args...) {
  $type: nth($args, length($args));
  $props: $args;
  $result: ();

  @for $i from 1 through length($props) {
    $anim: length($args);
    $prop: nth($props, $i);
    $result: append($result, $prop);
    $result: append($result, unquote($string: '0.3s ease 0s'));

    @if $i != length($props) {
      $result: append($result, unquote($string: ","));
    }
  }

  @include simple_transition($result);
}
